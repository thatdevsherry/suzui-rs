name: CI
on:
  pull_request:
  push:
    branches:
      - main
env:
  CARGO_TERM_COLOR: always
# ensure that the workflow is only triggered once per PR, subsequent pushes to the PR will cancel
# and restart the workflow. See https://docs.github.com/en/actions/using-jobs/using-concurrency
concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true
jobs:
  fmt:
    name: fmt
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Install system dependencies
        run: sudo apt-get update && sudo apt-get install -y libudev-dev
      - name: Install Rust stable
        uses: dtolnay/rust-toolchain@stable
        with:
          components: rustfmt
      - name: check formatting
        run: cargo fmt -- --check
      - name: Cache Cargo dependencies
        uses: Swatinem/rust-cache@v2
  clippy:
    name: clippy
    runs-on: ubuntu-latest
    permissions:
      checks: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Install system dependencies
        run: sudo apt-get update && sudo apt-get install -y libudev-dev
      - name: Install Rust stable
        uses: dtolnay/rust-toolchain@stable
        with:
          components: clippy
      - name: Run clippy action
        uses: clechasseur/rs-clippy-check@v3
      - name: Cache Cargo dependencies
        uses: Swatinem/rust-cache@v2
  doc:
    name: doc
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Install system dependencies
        run: sudo apt-get update && sudo apt-get install -y libudev-dev
      - name: Install Rust stable
        uses: dtolnay/rust-toolchain@stable
      - name: Run cargo doc
        run: cargo doc --no-deps --all-features
  test:
    name: test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Install system dependencies
        run: sudo apt-get update && sudo apt-get install -y libudev-dev
      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
      # enable this ci template to run regardless of whether the lockfile is checked in or not
      - name: cargo generate-lockfile
        if: hashFiles('Cargo.lock') == ''
        run: cargo generate-lockfile
      - name: cargo test --locked
        run: cargo test --locked --all-features --all-targets
      - name: Cache Cargo dependencies
        uses: Swatinem/rust-cache@v2
